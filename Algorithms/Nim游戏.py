#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Mon Sep 24 15:50:33 2018

@author: pineapple
"""

'''
你和你的朋友，两个人一起玩 Nim游戏：
桌子上有一堆石头，每次你们轮流拿掉 1 - 3 块石头。 
拿掉最后一块石头的人就是获胜者。你作为先手。

你们是聪明人，每一步都是最优解。 
编写一个函数，来判断你是否可以在给定石头数量的情况下赢得游戏。

示例:
输入: 4
输出: false 
解释: 如果堆中有 4 块石头，那么你永远不会赢得比赛；
     因为无论你拿走 1 块、2 块 还是 3 块石头，最后一块石头总是会被你的朋友拿走。
'''

'''
第二次做：时间复杂度O(1) 空间复杂度O(1)
思路：如果当前石头数是４，那么无论你拿几个石头，你一定输，
    如果当前石头数是５，那么你可以拿１个石头然后剩下的石头数变成４，你赢
    如果当前石头数是６，那么你可以拿２个石头然后剩下的石头数变成４，你赢
    如果当前石头数是７，那么你可以拿３个石头然后剩下的石头数变成４，你赢
    如果当前石头数是８，无论你拿几个石头，你的对手可以让剩下的石头数变成４，你输
所以规律是，一旦n能够被４整除，返回False,否则返回True
'''

class Solution(object):
    def canWinNim(self, n):
        """
        :type n: int
        :rtype: bool
        """
        if n < 4:
            return True
        elif n==4:
            return False
        if n % 4 == 0:
            return False
        else:
            return True
        